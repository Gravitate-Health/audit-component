# Rotate already handled log file. Now rename log signature parts dir to
# make room for new parts file.
postrotate
    mv $1.logsig.parts $1.inprogress.logsig.parts
endscript

# If all the rotations of log files are done send signal HUP. After that
# listen the usage of files. If file is not used it is closed by rsyslog and
# integration can follow.
lastaction
    /bin/kill -HUP $(pgrep rsyslogd) 2> /dev/null || true
    for d in $1.inprogress.logsig.parts/
    do
        logfileName=$(echo $d | rev  | cut  -c26- | rev)
        while [ $(lsof -t $d/block-signatures.dat | wc -l) -ne 0 ]
        do
            sleep 0.1
        done
        logksi integrate $logfileName.inprogress -d -o $logfileName.logsig 2> /dev/null
        rm -rf $logfileName.inprogress.logsig.parts
    done

    # Now generate and force run logrotate file for KSI signatures.
    # Note that rotation period is not required as -f is used to force the
    # rotation.

    logRotateConfName=$(basename /tmp/$logfileName-logrotate.conf)
    echo "$1.logsig{" > $logRotateConfName
    echo "    include /etc/logrotate-rsyslog-ksi-common.conf" >> $logRotateConfName
    echo "    nocompress" >> $logRotateConfName
    echo "    extension .logsig" >> $logRotateConfName
    echo "}" >> $logRotateConfName

    logrotate -f $logRotateConfName
    rm $logRotateConfName
endscript
